/*! videojs-chromecast - v1.1.1 - 2016-01-01
* https://github.com/kim-company/videojs-chromecast
* Copyright (c) 2016 KIM Keep In Mind GmbH, srl; Licensed MIT */

(function(){var a=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a},b={}.hasOwnProperty;videojs.addLanguage("de",{"CASTING TO":"WIEDERGABE AUF"}),videojs.addLanguage("it",{"CASTING TO":"PLAYBACK SU"}),videojs.plugin("chromecast",function(a){return this.chromecastComponent=new videojs.ChromecastComponent(this,a),this.ready(function(a){return function(){return a.controlBar.addChild(a.chromecastComponent)}}(this))}),videojs.ChromecastComponent=function(b){function c(a,b){this.options=a,c.__super__.constructor.call(this,this.options,b),this.options.controls()||this.disable(),this.hide(),this.initializeWhenApiReady(),this.on("click",this.onClick),this.player_.on("play",function(a){return function(){return a.onPlay()}}(this)),this.player_.on("pause",function(a){return function(){return a.onPause()}}(this)),this.player_.on("seeked",function(a){return function(){return a.onSeeked()}}(this)),this.player_.ready(function(a){return function(){return a.castingEl=a.createCastingOverlayEl(),a.castingReceiverText=a.castingEl.getElementsByClassName("casting-receiver")[0],a.castingSubtextText=a.castingEl.getElementsByClassName("casting-subtext")[0]}}(this))}return a(c,b),c.prototype.buttonText="Chromecast",c.prototype.inactivityTimeout=2e3,c.prototype.apiInitialized=!1,c.prototype.apiSession=null,c.prototype.apiMedia=null,c.prototype.casting=!1,c.prototype.paused=!0,c.prototype.muted=!1,c.prototype.currentVolume=1,c.prototype.currentMediaTime=0,c.prototype.timer=null,c.prototype.timerStep=1e3,c.prototype.createCastingOverlayEl=function(){var a;return a=document.createElement("div"),a.className="vjs-chromecast-casting-to",a.innerHTML='<div class="casting-overlay">\n  <div class="casting-information">\n    <div class="casting-icon">&#58880</div>\n    <div class="casting-description">\n      <small>'+this.localize("CASTING TO")+'</small><br>\n      <span class="casting-receiver"></span>\n      <span class="casting-subtext"></span>\n    </div>\n  </div>\n</div>',this.player_.el_.insertBefore(a,this.player_.controlBar.el_),a},c.prototype.updateCastingOverlay=function(a,b){return a&&(this.castingReceiverText.innerHTML=a),b?this.castingSubtextText.innerHTML=b:void 0},c.prototype.initializeWhenApiReady=function(){var a;return chrome.cast&&chrome.cast.isAvailable?this.initializeApi():(a=window.__onGCastApiAvailable,window.__onGCastApiAvailable=function(b){return function(c,d){return a&&a(c,d),b.initializeApi()}}(this))},c.prototype.initializeApi=function(){var a,b,c;return videojs.log("Cast APIs are available"),b=this.options.appId||chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,c=new chrome.cast.SessionRequest(b),a=new chrome.cast.ApiConfig(c,this.sessionJoinedListener,this.receiverListener.bind(this)),chrome.cast.initialize(a,this.onInitSuccess.bind(this),this.castError)},c.prototype.sessionJoinedListener=function(a){return console.log("Session joined")},c.prototype.receiverListener=function(a){return"available"===a?this.show():void 0},c.prototype.onInitSuccess=function(){return this.apiInitialized=!0},c.prototype.castError=function(a){return videojs.log("Cast Error: "+JSON.stringify(a))},c.prototype.doLaunch=function(){return videojs.log("Cast video: "+this.player_.currentSrc()),this.apiInitialized?chrome.cast.requestSession(this.onSessionSuccess.bind(this),this.castError):videojs.log("Session not initialized")},c.prototype.onSessionSuccess=function(a){var b,c,d,e,f,g;if(videojs.log("Session initialized: "+a.sessionId),this.apiSession=a,this.addClass("connected"),this.player_.addClass("vjs-chromecast-casting"),this.updateCastingOverlay(this.apiSession.receiver.friendlyName,"Connected"),e=new chrome.cast.media.MediaInfo(this.player_.currentSrc(),this.player_.currentType()),this.options.metadata){e.metadata=new chrome.cast.media.GenericMediaMetadata,f=this.options.metadata;for(c in f)g=f[c],e.metadata[c]=g;this.player_.options_.poster&&(b=new chrome.cast.Image(this.player_.options_.poster),e.metadata.images=[b])}return d=new chrome.cast.media.LoadRequest(e),d.autoplay=!0,d.currentTime=this.player_.currentTime(),this.apiSession.loadMedia(d,this.onMediaDiscovered.bind(this),this.castError),this.apiSession.addUpdateListener(this.onSessionUpdate.bind(this))},c.prototype.onMediaDiscovered=function(a){return this.apiMedia=a,this.apiMedia.addUpdateListener(this.onMediaStatusUpdate.bind(this)),this.startProgressTimer(this.incrementMediaTime.bind(this)),this.casting=!0,this.updateCastingOverlay(this.apiSession.receiver.friendlyName,"Loading"),this.inactivityTimeout=this.player_.options_.inactivityTimeout,this.player_.options_.inactivityTimeout=0,this.player_.userActive(!0),this.playTechOnChromecastPlay=!0},c.prototype.onSessionUpdate=function(a){return this.apiMedia?a?void 0:this.onStopAppSuccess():void 0},c.prototype.onMediaStatusUpdate=function(a){if(this.apiMedia)switch(this.currentMediaTime=this.apiMedia.currentTime,this.apiMedia.playerState){case chrome.cast.media.PlayerState.IDLE:return this.currentMediaTime=0,this.trigger("timeupdate"),this.onStopAppSuccess();case chrome.cast.media.PlayerState.PAUSED:if(this.updateCastingOverlay(this.apiSession.receiver.friendlyName,"Paused"),this.paused)return;return this.player_.pause(),this.paused=!0;case chrome.cast.media.PlayerState.PLAYING:if(this.updateCastingOverlay(this.apiSession.receiver.friendlyName,"Playing"),this.playTechOnChromecastPlay)return this.player_.play(),this.paused=!1,void(this.playTechOnChromecastPlay=!1);if(!this.paused)return;return this.player_.play(),this.paused=!1}},c.prototype.startProgressTimer=function(a){return this.timer&&(clearInterval(this.timer),this.timer=null),this.timer=setInterval(a.bind(this),this.timerStep)},c.prototype.play=function(){return this.apiMedia&&this.paused?(this.apiMedia.play(null,this.mediaCommandSuccessCallback.bind(this,"Playing: "+this.apiMedia.sessionId),this.onError),this.paused=!1):void 0},c.prototype.pause=function(){return this.apiMedia&&!this.seeking?this.paused?void 0:(this.apiMedia.pause(null,this.mediaCommandSuccessCallback.bind(this,"Paused: "+this.apiMedia.sessionId),this.onError),this.paused=!0):void 0},c.prototype.seekMedia=function(a,b){var c;return c=new chrome.cast.media.SeekRequest,c.currentTime=a,(b||this.player_.controlBar.progressControl.seekBar.videoWasPlaying)&&(c.resumeState=chrome.cast.media.ResumeState.PLAYBACK_START),this.updateCastingOverlay(this.apiSession.receiver.friendlyName,"Seeking"),this.apiMedia.seek(c,this.onSeekSuccess.bind(this,a),this.onError)},c.prototype.onSeekSuccess=function(a){return this.currentMediaTime=a},c.prototype.setMediaVolume=function(a,b){var c,d;if(this.apiMedia)return d=new chrome.cast.Volume,d.level=a,d.muted=b,this.currentVolume=d.level,this.muted=b,c=new chrome.cast.media.VolumeRequest,c.volume=d,this.apiMedia.setVolume(c,this.mediaCommandSuccessCallback.bind(this,"Volume changed"),this.onError),this.player_.trigger("volumechange")},c.prototype.incrementMediaTime=function(){return this.apiMedia.playerState===chrome.cast.media.PlayerState.PLAYING?this.currentMediaTime<this.apiMedia.media.duration?(this.currentMediaTime+=1,this.trigger("timeupdate")):(this.currentMediaTime=0,clearInterval(this.timer)):void 0},c.prototype.mediaCommandSuccessCallback=function(a,b){return videojs.log(a)},c.prototype.onError=function(){return videojs.log("error")},c.prototype.stopCasting=function(){return this.apiSession.stop(this.onStopAppSuccess.bind(this),this.onError)},c.prototype.onStopAppSuccess=function(){return clearInterval(this.timer),this.casting=!1,this.player_.removeClass("vjs-chromecast-casting"),this.removeClass("connected"),this.player_.options_.inactivityTimeout=this.inactivityTimeout,this.apiMedia=null,this.apiSession=null},c.prototype.buildCSSClass=function(){return c.__super__.buildCSSClass.apply(this,arguments)+"vjs-chromecast-button"},c.prototype.onPlay=function(){return this.casting?this.play():void 0},c.prototype.onPause=function(){return this.casting?this.pause():void 0},c.prototype.onSeeked=function(a){var b;if(this.casting)return b=this.player_.currentTime(),this.player_.pause(),this.playTechOnChromecastPlay=!0,this.seeking=!0,this.seekMedia(b)},c.prototype.onClick=function(){return this.casting?this.stopCasting():(this.player_.pause(),this.doLaunch())},c}(videojs.getComponent("Button"))}).call(this);